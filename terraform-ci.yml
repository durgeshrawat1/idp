# Terraform deployment stages for GenAI IDP Accelerator
# Include this in your main .gitlab-ci.yml using:
# include: 'terraform-ci.yml'

.terraform_variables: &terraform_variables
  TF_VAR_cicd_role_arn: $CICD_GITLAB_RUNNER_IAM_ROLE
  TF_VAR_kms_key_arn: $KMS_KEY_ARN

.terraform_before_script: &terraform_before_script
  - apk add --no-cache zip python3 py3-pip nodejs npm
  - pip3 install awscli
  - export AWS_ROLE_ARN=$CICD_GITLAB_RUNNER_IAM_ROLE
  - export AWS_WEB_IDENTITY_TOKEN_FILE=$CI_JOB_JWT_FILE

# Terraform validation and deployment
terraform_validate:
  stage: validate
  variables:
    <<: *terraform_variables
  before_script:
    <<: *terraform_before_script
  script:
    - terraform init
    - terraform validate
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

terraform_plan:
  stage: plan
  variables:
    <<: *terraform_variables
  before_script:
    <<: *terraform_before_script
  script:
    - |
      # Use environment variable for tfvars path
      if [ -n "$TFVARS_PATH" ]; then
        terraform plan -var-file="$TFVARS_PATH"
      else
        terraform plan -var-file=env/dev1_intelligence/lab.tfvars
      fi
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

terraform_apply:
  stage: apply
  variables:
    <<: *terraform_variables
  before_script:
    <<: *terraform_before_script
  script:
    - |
      # Use environment variable for tfvars path
      if [ -n "$TFVARS_PATH" ]; then
        terraform apply -auto-approve -var-file="$TFVARS_PATH"
      else
        terraform apply -auto-approve -var-file=env/dev1_intelligence/lab.tfvars
      fi
  when: manual
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH 